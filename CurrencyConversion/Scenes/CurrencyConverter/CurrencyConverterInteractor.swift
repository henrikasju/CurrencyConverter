//
//  CurrencyConverterInteractor.swift
//  CurrencyConversion
//
//  Created by Henrikas J on 09/01/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

protocol CurrencyConverterBusinessLogic
{
  func fetchCurrencyConversion(request: CurrencyConverter.FetchCurrencyConversion.Request)
}

protocol CurrencyConverterDataStore
{
  //var name: String { get set }
}

class CurrencyConverterInteractor: CurrencyConverterBusinessLogic, CurrencyConverterDataStore
{
  var presenter: CurrencyConverterPresentationLogic?
  var worker: CurrencyConversionWorker?
  var currencyConversionWorker: CurrencyConversionWorker?

  func fetchCurrencyConversion(request: CurrencyConverter.FetchCurrencyConversion.Request)
  {
    // validate request!
    let numberFormatter = NumberFormatter()
    if numberFormatter.number(from: request.fromAmount)?.doubleValue == nil {
      print("Error invalid number format!")
      let response = CurrencyConverter.FetchCurrencyConversion.Response(error: ErrorType.InvalidConversionInput)
      presenter?.presentCurrencyConversion(response: response)
    }

      currencyConversionWorker?.fetchConvertedCurrency(fromAmount: request.fromAmount,
                                                       fromCurrency: request.fromCurrency,
                                                       toCurrency: request.toCurrency,
                                                       completion:
      { response in
        switch response.result {
        case .success:
          let conversion = CurrencyConverter.FetchCurrencyConversion.Response(conversion: response.value, fee: 0.00)
          self.presenter?.presentCurrencyConversion(response: conversion)
        case let .failure(error):
          let conversion = CurrencyConverter.FetchCurrencyConversion.Response(error: error)
          self.presenter?.presentCurrencyConversion(response: conversion)
        }
      })

    }
  
}
